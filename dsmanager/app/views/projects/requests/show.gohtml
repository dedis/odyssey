{{ define "title" }}{{.Title}}{{ end }}
{{ define "content" }}

{{ $pid := .Project.UID }}
{{ $rid := .RID }}

<div class="pure-g">
    <div class="pure-u-1 pure-u-sm-1-4"><p></p></div>
    <div class="pure-u-1 pure-u-sm-1-2">

        <h1>Request: {{.Request.Description}}</h1>

        <p><a href="/">home</a> / <a href="/projects">projects</a> / <a href="/projects/{{$pid}}">{{$pid}}</a> / <a href="/projects/{{$pid}}/requests/{{$rid}}">requests / {{$rid}}</a> 

        <p><a class="pure-button" href="/projects/{{.Project.UID}}">ðŸ”™ Back to the project</a></p>

        <p>ðŸ¦‰</p>

        <p><b>Number of tasks</b>: {{len .Request.Tasks}}

        <details>
        <summary class="cw">
            <div class="cloud-wrapper"><div><span id="enclave-cloud-img"><img src="/assets/images/status/{{.CloudLogsStatus}}.gif"/></span> <b>Enclave cloud log</b> (<span id="cloud-logs-n">{{ len .CloudLogs }}</span>)</div></div>
        </summary>

        <div class="nice-scroll" style="overflow-x:scroll">
            <table id="cloud-tasks-main-container" class="pure-table pure-table-horizontal tasks">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Time</th>
                        <th>Message</th>
                        <th>Source</th>
                    </tr>
                </thead>

                <tbody id="cloud-task-holder">
                {{ range $i, $d := .CloudLogs }}
                    <tr>
                        <td>{{.Type}}</td>
                        <td>{{.Time}}</td>
                    {{ if eq .Type "importantInfo" }}
                        <td class="important">
                    {{ else }}
                        <td>
                    {{ end }}
                            <details>
                                <summary>{{.Message}}</summary>
                                {{.Details}}
                            </details>
                        </td>
                        <td>{{.Source}}</td>
                    </tr>
                {{ end }}
                </tbody>
            </table>
        </div>
    </details>

    <script>
    (function () {
    const evtSource = new EventSource("/projects/"+"{{$pid}}"+"/requests/"+"{{$rid}}"+"/cloudstream", {withCredentials: false });
    evtSource.onmessage = function(event) {
        const eventList = document.getElementById("cloud-task-holder");

        var newRow = eventList.insertRow(-1)
        var jsonObj = JSON.parse(event.data)

        const cloudn = document.getElementById("cloud-logs-n");

        var numcloud = cloudn.innerHTML
        numcloud++
        cloudn.innerHTML = numcloud

        const cloudLogImg = document.getElementById("enclave-cloud-img");
        cloudLogImg.innerHTML = '<img src="/assets/images/status/' + jsonObj.type + '.gif"/> '


        newRow.insertCell(0).innerHTML = jsonObj.type
        newRow.insertCell(1).innerHTML = jsonObj.time

        var details = document.createElement("details")
        var summary = document.createElement("summary")
        var textDetails = document.createTextNode(jsonObj.details)

        summary.innerText = jsonObj.message
        details.appendChild(summary)
        details.appendChild(textDetails)
        var infoCell = newRow.insertCell(2)
        if (jsonObj.type == "importantInfo") {
            infoCell.classList.add("important")
        }
        infoCell.appendChild(details)

        newRow.insertCell(3).innerHTML = jsonObj.source
        eventList.prepend(newRow);

        evtSource.onerror = function(err) {
            console.error("EventSource failed:", err);
            evtSource.close();
        };
    }
    })();
    </script>

    {{ range $i, $task := .Request.Tasks }}
        <h3>Task</h3>
        <p><b>Description</b>: {{.GetData.Description}}</p>
        <p><b>Started at</b>: {{.GetData.StartD}}</p>
        <p><b>Ended at</b>: {{.GetData.EndD}}</p>
        
        <p class="status"><b>Status</b>: <img src="/assets/images/status/{{.GetData.Status}}.gif"/> {{.GetData.Status}}</p>

        <p><b>TaskEvents</b> (<span id="task-n">{{ len .GetData.History }}</span>)</p>

        <div class="nice-scroll" style="overflow-x:scroll">
            <table id="tasks-main-container" class="pure-table pure-table-horizontal tasks">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Time</th>
                        <th>Message</th>
                        <th>Source</th>
                    </tr>
                </thead>

                <tbody id="task-holder">
                    {{ range $i, $d := .GetData.History }}
                        <tr>
                            <td>{{.Type}}</td>
                            <td>{{.Time}}</td>
                        {{ if eq .Type "importantInfo" }}
                            <td class="important">
                        {{ else }}
                            <td>
                        {{ end }}
                                <details>
                                    <summary>{{.Message}}</summary>
                                    {{.Details}}
                                </details>
                            </td>
                            <td>{{.Source}}</td>
                        </tr>
                    {{ end }}
                </tbody>
            </table>
        </div>

        <script>
            (function () {
            const evtSource = new EventSource("/projects/"+"{{$pid}}"+"/requests/"+"{{$rid}}"+"/tasks/"+"{{$i}}/stream", {withCredentials: false });
            evtSource.onmessage = function(event) {
                const eventList = document.getElementById("task-holder");
                const statusHolder = document.getElementById("status-holder");
                const taskn = document.getElementById("task-n");

                var numTask = taskn.innerHTML
                numTask++
                taskn.innerHTML = numTask

                var newRow = eventList.insertRow(-1)
                var jsonObj = JSON.parse(event.data)

                if (jsonObj.type == "closeError") {
                    location.reload();
                } else if (jsonObj.type == "closeOK") {
                    location.reload();
                }

                newRow.insertCell(0).innerHTML = jsonObj.type
                newRow.insertCell(1).innerHTML = jsonObj.time

                var details = document.createElement("details")
                var summary = document.createElement("summary")
                var textDetails = document.createTextNode(jsonObj.details)

                summary.innerText = jsonObj.message
                details.appendChild(summary)
                details.appendChild(textDetails)
                var infoCell = newRow.insertCell(2)
                if (jsonObj.type == "importantInfo") {
                    infoCell.classList.add("important")
                }
                infoCell.appendChild(details)

                newRow.insertCell(3).innerHTML = jsonObj.source
                eventList.prepend(newRow);

                evtSource.onerror = function(err) {
                    console.error("EventSource failed:", err);
                    evtSource.close();
                };
            }
            })();
        </script>
        <p class="small-links"><a href="/projects/{{$pid}}/requests/{{$rid}}/tasks/{{$i}}/debug">debug</a>
    {{ end }}
</div>

<div class="pure-u-1 pure-u-sm-1-4"><p></p></div>

<style>
    td.important {
        font-weight: bold;
    }
    table.requests {
        width: 100%;
    }
    p.status {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: flex-start;
    }
    p.status img {
        padding: 0 7px 0 5px;
        max-height: 32px;
    }

    summary.cw::-webkit-details-marker {
    display: none
    }

    summary.cw > div.cloud-wrapper {
        width: calc(100% - 50px);
        display: inline-block;
        vertical-align: middle;
    }
    summary.cw > div.cloud-wrapper > div {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: flex-start;
    }

    summary.cw > div.cloud-wrapper > div img {
        padding: 0 7px 0 5px;
        max-height: 32px;
    }

    summary.cw:before {
        content: "â–º";
        margin: 0px 10px 0 0;
        width: 20px;
    }

    details[open] summary.cw:before {
        content: "â–¼";
    }

    .small-links {
        text-align: right;
    }
    .small-links a {
        color: #aaa;
        font-size: 8px;
        text-decoration: none;
    }
</style>

{{ end }}